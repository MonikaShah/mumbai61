# Generated by Django 4.1.3 on 2023-07-28 07:29

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('map', '0003_auto_20220117_0952'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
            ],
            options={
                'db_table': 'zerowaste_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingsWard9April22',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_id', models.IntegerField(blank=True, null=True)),
                ('ward_name', models.CharField(blank=True, max_length=50, null=True)),
                ('ward_id', models.CharField(blank=True, max_length=50, null=True)),
                ('prabhag_no', models.CharField(blank=True, max_length=50, null=True)),
                ('building_name', models.CharField(blank=True, max_length=250, null=True)),
                ('road_segment', models.CharField(blank=True, max_length=250, null=True)),
                ('name_jo', models.CharField(blank=True, max_length=250, null=True)),
                ('section', models.CharField(blank=True, max_length=230, null=True)),
                ('building_type', models.CharField(blank=True, max_length=30, null=True)),
                ('dry', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('wet', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('cluster_name', models.CharField(blank=True, max_length=270, null=True)),
                ('building_cluster', models.CharField(blank=True, max_length=270, null=True)),
                ('no_of_house', models.IntegerField(blank=True, null=True)),
                ('road_name', models.CharField(blank=True, max_length=250, null=True)),
                ('sac_no', models.CharField(blank=True, max_length=250, null=True)),
                ('lat', models.CharField(blank=True, max_length=250, null=True)),
                ('lng', models.CharField(blank=True, max_length=250, null=True)),
                ('road_name_alias', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'buildings_ward_8april_22',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingUnder30Mtr',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(blank=True, null=True, srid=4326)),
                ('wkt', models.CharField(blank=True, max_length=255, null=True)),
                ('building_i', models.CharField(blank=True, max_length=255, null=True)),
                ('sac_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mcgm_usern', models.CharField(blank=True, max_length=255, null=True)),
                ('mcgm_updat', models.CharField(blank=True, max_length=255, null=True)),
                ('sac_type', models.CharField(blank=True, max_length=255, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('num_flat', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('num_shops', models.CharField(blank=True, max_length=255, null=True)),
                ('num_floors', models.CharField(blank=True, max_length=255, null=True)),
                ('building_name', models.CharField(blank=True, max_length=255, null=True)),
                ('building_type', models.CharField(blank=True, max_length=255, null=True)),
                ('village', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('before_geo', models.CharField(blank=True, max_length=254, null=True)),
                ('id1', models.BigIntegerField(blank=True, null=True)),
                ('prabhag_no', models.CharField(blank=True, max_length=254, null=True)),
                ('fid', models.IntegerField(blank=True, null=True)),
                ('district', models.CharField(blank=True, max_length=254, null=True)),
                ('ward_id_2', models.CharField(blank=True, max_length=254, null=True)),
                ('ward_name_field', models.CharField(blank=True, db_column='ward_name_', max_length=254, null=True)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('prop_add', models.CharField(blank=True, max_length=255, null=True)),
                ('update_time', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('device_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('validity', models.BooleanField(blank=True, null=True)),
                ('id_2', models.BigIntegerField(blank=True, null=True)),
                ('fid_2', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('descriptio', models.CharField(blank=True, max_length=254, null=True)),
                ('length', models.CharField(blank=True, max_length=254, null=True)),
                ('buffer', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'db_table': 'building_under_30mtr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KWestBeat22Jan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('fid', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('descriptio', models.CharField(blank=True, max_length=254, null=True)),
                ('length', models.CharField(blank=True, max_length=254, null=True)),
                ('buffer', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'k_west_beat_22jan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='P122Buildings14October22',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(blank=True, null=True, srid=4326)),
                ('fid', models.BigIntegerField(blank=True, null=True)),
                ('sac_number', models.CharField(blank=True, max_length=254, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=254, null=True)),
                ('num_flat', models.CharField(blank=True, max_length=254, null=True)),
                ('num_shops', models.CharField(blank=True, max_length=254, null=True)),
                ('num_floors', models.CharField(blank=True, max_length=254, null=True)),
                ('building_n', models.CharField(blank=True, max_length=254, null=True)),
                ('building_t', models.CharField(blank=True, max_length=254, null=True)),
                ('prabhag_no', models.CharField(blank=True, max_length=254, null=True)),
                ('ward_name_field', models.CharField(blank=True, db_column='ward_name_', max_length=254, null=True)),
                ('prop_add', models.CharField(blank=True, max_length=254, null=True)),
                ('cluster', models.CharField(blank=True, max_length=20, null=True)),
                ('clust_nm', models.CharField(blank=True, max_length=50, null=True)),
                ('population', models.BigIntegerField(blank=True, null=True)),
                ('bin_photo', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('date_time', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('qfield_username', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'p122_buildings_14october22',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='P122Buildings8Nov22',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.CharField(blank=True, max_length=100, null=True)),
                ('sac_number', models.CharField(blank=True, max_length=100, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=100, null=True)),
                ('num_flat', models.CharField(blank=True, max_length=100, null=True)),
                ('num_shops', models.CharField(blank=True, max_length=100, null=True)),
                ('num_floors', models.CharField(blank=True, max_length=100, null=True)),
                ('building_n', models.CharField(blank=True, max_length=100, null=True)),
                ('building_t', models.CharField(blank=True, max_length=100, null=True)),
                ('prabhag_no', models.CharField(blank=True, max_length=100, null=True)),
                ('ward_name_field', models.CharField(blank=True, db_column='ward_name_', max_length=100, null=True)),
                ('prop_add', models.CharField(blank=True, max_length=100, null=True)),
                ('cluster', models.CharField(blank=True, max_length=100, null=True)),
                ('clust_nm', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('bin_photo', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('date_time', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('qfield_username', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'p122_buildings_8Nov22',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WasteSegregationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('building_name', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('num_wings', models.CharField(blank=True, max_length=100, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=100, null=True)),
                ('building_type', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('num_households_premises', models.CharField(blank=True, max_length=100, null=True)),
                ('num_shops_premises', models.CharField(blank=True, max_length=100, null=True)),
                ('type_waste_generator', models.CharField(blank=True, max_length=100, null=True)),
                ('waste_segregation', models.CharField(blank=True, max_length=100, null=True)),
                ('wet_waste_before_segregation', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('dry_waste_before_segregation', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('hazardous_waste', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('compostable_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('recyclable_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('rejected_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('composting_type', models.CharField(blank=True, max_length=100, null=True)),
                ('compost_bin_by_mcgm', models.CharField(blank=True, max_length=100, null=True)),
                ('date_notice_issued', models.CharField(blank=True, max_length=100, null=True)),
                ('name_number', models.CharField(blank=True, max_length=100, null=True)),
                ('coll_date', models.DateField(blank=True, null=True)),
                ('building_bifurcation', models.CharField(blank=True, max_length=50, null=True)),
                ('admin_ward', models.CharField(blank=True, max_length=50, null=True)),
                ('councillor_ward', models.CharField(blank=True, max_length=50, null=True)),
                ('ward', models.CharField(blank=True, default='61', max_length=100, null=True)),
            ],
            options={
                'db_table': 'waste_segregation_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='data_form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailF', models.CharField(max_length=100)),
                ('studentName', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=3)),
                ('collegeName', models.CharField(max_length=100)),
                ('websiteUsername', models.CharField(max_length=100)),
                ('sponsered', models.CharField(max_length=3)),
                ('sponsBy', models.CharField(max_length=100)),
                ('ownDevice', models.CharField(max_length=3)),
                ('date', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'student_registration',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.CharField(max_length=50)),
                ('prabhag', models.CharField(blank=True, max_length=100, null=True)),
                ('chowky', models.CharField(max_length=100)),
                ('post', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(default='1111111111', max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\d+)*\\Z'), code='invalid', message=None), django.core.validators.MinLengthValidator(10)], verbose_name='Phone number')),
                ('councillor', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'employee_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Grievance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('audio_src', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('img_src', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('grievance', models.TextField(default='Testing')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('grievance_no', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
            options={
                'db_table': 'grievance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HumanResourceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.CharField(max_length=50)),
                ('prabhag', models.CharField(max_length=100)),
                ('road_name', models.CharField(max_length=100)),
                ('building_name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('name_contact_person', models.CharField(max_length=100)),
                ('mobile_contact_person', models.CharField(default='1111111111', max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\d+)*\\Z'), code='invalid', message=None), django.core.validators.MinLengthValidator(10)], verbose_name='Phone number')),
                ('email_contact_person', models.EmailField(max_length=50, verbose_name='Email Id')),
            ],
            options={
                'db_table': 'humanresourcedata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=10, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('service_swk', models.IntegerField(default='yes')),
                ('timing_swk', models.IntegerField(null=True)),
                ('mobile_swk', models.IntegerField(null=True)),
                ('compost_kit_garden', models.IntegerField(null=True)),
                ('communicate_swk', models.IntegerField(null=True)),
                ('solid_waste_man', models.IntegerField(null=True)),
                ('service_workers', models.IntegerField(null=True)),
                ('segregation', models.IntegerField(null=True)),
                ('recycle_process', models.IntegerField(null=True)),
                ('awareness', models.IntegerField(null=True)),
                ('role', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coll_date', models.DateField()),
                ('region_name', models.CharField(default='region A', max_length=100)),
                ('building_name', models.CharField(default='A', max_length=100)),
                ('wet_waste_bf', models.FloatField(blank=True, db_column='wet_waste_bf', null=True)),
                ('dry_waste_bf', models.FloatField(blank=True, db_column='dry_waste_bf', null=True)),
                ('hazardous_waste', models.FloatField(blank=True, db_column='hazardous_waste', null=True)),
                ('recyclable_waste', models.FloatField(blank=True, db_column='recyclable_waste', null=True)),
                ('compostable_waste', models.FloatField(blank=True, db_column='compostable_waste', null=True)),
                ('rejected_waste', models.FloatField(blank=True, db_column='rejected_waste', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WasteSegregationDetailsRevised2March22',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('road_name', models.CharField(blank=True, max_length=254, null=True)),
                ('building_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sac_no', models.CharField(blank=True, max_length=254, null=True)),
                ('building_type', models.CharField(blank=True, max_length=255, null=True)),
                ('building_cluster', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=255, null=True)),
                ('num_wings', models.CharField(blank=True, max_length=255, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('num_households_premises', models.CharField(blank=True, max_length=255, null=True)),
                ('num_shops_premises', models.CharField(blank=True, max_length=255, null=True)),
                ('approx_population', models.CharField(blank=True, max_length=255, null=True)),
                ('seg_done', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=255, null=True)),
                ('mixed_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('wet_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dry_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dom_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('e_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bulk_waste', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('coll_date', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('prabhag', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.mumbaiprabhagboundaries3jan2022v2', to_field='prabhag_no')),
                ('ward', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.mumbaiwardboundary2jan2022', to_field='ward_id')),
            ],
            options={
                'db_table': 'waste_segregation_details_revised_2march22',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='compost_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prabhag_no', models.CharField(blank=True, max_length=254, null=True)),
                ('sac_no', models.CharField(blank=True, max_length=254, null=True)),
                ('road_name', models.CharField(blank=True, max_length=254, null=True)),
                ('building_name', models.CharField(blank=True, max_length=255, null=True)),
                ('compost_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('testing_done', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=255, null=True)),
                ('compost_quality', models.CharField(blank=True, choices=[('Good', 'Good'), ('Average', 'Average'), ('Poor', 'Poor')], default='Average', max_length=255, null=True)),
                ('coll_date', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, null=True)),
                ('ward', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.mumbaiwardboundary2jan2022', to_field='ward_id')),
            ],
            options={
                'db_table': 'compost_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('role', models.CharField(choices=[('Select', 'none'), ('CT', 'Citizen'), ('MO', 'Municipality Officer'), ('SR', 'Society Representative'), ('SV', 'Student Volunteer')], default='none', max_length=9)),
                ('designation', models.CharField(blank=True, max_length=150, null=True)),
                ('area', models.CharField(choices=[('Select', 'none'), ('Ward', 'Ward'), ('Prabhag', 'Prabhag')], default='none', max_length=9)),
                ('is_staff', models.BooleanField(blank=True, default=False, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('Ward', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.mumbaiwardboundary2jan2022', to_field='ward_id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('prabhag', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.mumbaiprabhagboundaries3jan2022v2', to_field='prabhag_no')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
